<<<<<<< HEAD
||||||| merged common ancestors
pipeline {
	
	agent any
	stages {
		stage ("Compile Stage") {
			steps {
				withMaven(maven : "maven_3_5_0") {
					sh 'mvn clean compile'
				}
			}

		}
=======

>>>>>>> ec43b10815af689a0a5e238df8c610b776c22858

<<<<<<< HEAD
pipeline {
    agent any
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') {
            steps {
                echo 'Building'
		git branch: 'mk245-jaspertest-2',
                credentialsId: 'mktest',
                url: 'https://github.com/MensWearhouse/eom.git'
			    sh 'ls -lrt ExtensionCode/PickListReport/TMW/PickListReport'    
            }
        }
        stage('creating zip') {
            steps {
                echo 'Testing'
                def filename = '/export/home/webadmin/.jenkins/jobs/mk245-test-folder/jobs/jasper-report-job/workspace/ExtensionCode/PickListReport/TMW/PickListReport.zip'
				if (fileExists(filename))
				    {
					    sh "rm  \${filename}"
				    	zip zipFile: 'PickListReport.zip', dir:'ExtensionCode/PickListReport/TMW/PickListReport'
          
		    } 
		else{
			zip zipFile: 'PickListReport.zip', dir:'ExtensionCode/PickListReport/TMW/PickListReport'
           	}    
                echo "END - ZIP"
				sh 'ls -lrt ExtensionCode/PickListReport/TMW'    
            }
        }
        stage('Deploy') {
            steps {
                //sh "curl -v https://tssls.omni.manh.com/oauth/token?grant_type=password&username=admin@TMW.com&password=Password1!")
				//sh('curl -b session -X POST http://deployhub.openmakesoftware.com/API/UserProfile?user=admin')
				def response = httpRequest "https://tssls.omni.manh.com/oauth/token?grant_type=password&username=admin@TMW.com&password=Password1!"
				println('Status: '+response.status)
				println('Response: '+response.content)
            }
        }
    }
}
||||||| merged common ancestors
		stage ("Testing Stage") {
			steps {
				withMaven(maven : "maven_3_5_0") {
					sh 'mvn test'
				}
			}
		}

		stage ("Deployment Stage") {
			steps {
				withMaven(maven : "maven_3_5_0") {
					sh 'mvn deploy'
				}
			}
		}
	}
}
=======

pipeline {
    agent any
    
    environment {
        props = load 'general.groovy'
	filename = '/export/home/webadmin/.jenkins/jobs/mk245-test-folder/jobs/jasper-report-job/workspace/ExtensionCode/PickListReport/TMW/PickListReport.zip'
	}
    parameters {
    	gitParameter branchFilter: 'origin/(.*)', defaultValue: 'test2-jenkin', name: 'BRANCH', type: 'PT_BRANCH'
  	}
    options {
        skipStagesAfterUnstable()
    	    }
	    
    stages {
        stage('Build') {
            steps {
                echo "Building from branch ${params.BRANCH}"
		git branch: "${params.BRANCH}",
                credentialsId: 'test',
                url: 'https://github.com/bimsoft/Employment_proj.git'
		echo "${WORKSPACE}"
		sh 'ls -lrt'
		
		script {
			echo "parameter name...................${params.folder}"
		
			if (params.folder == "Parent") {
				echo " Parent selected"
			} else {
				echo " ${params.folder} selected"
			}
		} 
		
   		   
            }
        }
	
        stage('creating zip') {
            steps {
                echo 'Testing'
                //zip zipFile: 'todo-api.zip', dir:'todo-api' 
		//sh 'zip todo-api.zip todo-api'
		//sh "ls -lrt \${WORKSPACE}"  
            }
        }
        stage('Deploy') {
            steps {
	        script {
			//sh "curl -H \"Accept:application/json\" -H \"Authorization: Basic `echo -n omnicomponent.1.0.0:b4s8rgTyg55XYNun | base64`\" -X POST 'https://tssls-auth.omni.manh.com/oauth/token?grant_type=password&username=admin@TMW.com&password=Password1"'!'"'"
			//sh('curl -b session -X POST http://deployhub.openmakesoftware.com/API/UserProfile?user=admin')
			//def response = httpRequest "https://reqres.in/api/users?page=${env.page}"
			//def response = httpRequest authentication: 'cred', url: "https://tssls-auth.omni.manh.com/oauth/token?grant_type=password&username=admin@TMW.com&password=Password1!"
			//def apiurl = "https://jsonplaceholder.typicode.com/posts/1"
			def apiurl = "http://dummy.restapiexample.com/api/v1/employees"
			def response = sh(returnStdout: true, script: "curl -s -H \"Content-type: application/json\" -X GET ${apiurl}").trim()
			
			//writeJSON file: 'output.json', json: response, pretty: 4
			//def data = readJSON file:'output.json'
    			//echo "color: ${data[0].employee_name}"
			
			//def t_act = sh(returnStdout: true, script: "echo ${response} | grep 'Raj' ")
			
			//def act = sh(returnStdout: true, script: "${t_act: -1}")
			
			//println('Status: '+response.status)
			//println('Response: '+response.content)
			//echo "Password is --- ${env.pass}"
			//echo "User Name is -- ${env.page}"
			//echo props['pass']
			sh 'ssh ubuntu@3.19.72.68 ls -lrt'
			//echo "This is result ${t_act}"
			}
            }
        }
    }
    post {
    	always {
		echo "Wow.... Deleting Zip file from \${WORKSPACE}"
		sh "rm -rf \${WORKSPACE}/todo-api.zip"
		}
	}
}
>>>>>>> ec43b10815af689a0a5e238df8c610b776c22858
